// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OAuthProfile {
  id                String  @id @default(cuid())
  userId            String
  created_at        Int?
  updated_at        DateTime @updatedAt

  type              String
  provider          String
  providerOAuthId   String

  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?

  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerOAuthId])
}

model Session {
  id           String   @id @default(cuid())
  sid          String   @unique
  data         String
  expiresAt    DateTime
}

model User {
  id            String    @id @default(cuid())
  name          String?   @db.VarChar(255)
  email         String?   
  password      String?
  verified      Boolean?  @default(false)
  emailVerified DateTime?
  image         String?   @default("../public/user_profilepic.png")
  role          RoleEnumType? @default(user)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  authprofiles  OAuthProfile[]
  // sessions      Session[]
  
  @@unique([email])
}

enum RoleEnumType {
  user
  admin
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
